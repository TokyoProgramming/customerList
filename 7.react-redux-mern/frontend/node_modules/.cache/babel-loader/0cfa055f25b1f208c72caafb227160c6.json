{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { deleteCustomerReducer, getCustomerReducer, addCustomerReducer, updateCustomerReducer } from './reducers/customerReducer';\nimport { alertReducer } from './reducers/alertReducer';\nconst reducer = combineReducers({\n  getCustomer: getCustomerReducer,\n  addCustomer: addCustomerReducer,\n  deleteCustomer: deleteCustomerReducer,\n  updateCustomer: updateCustomerReducer,\n  alert: alertReducer\n});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/javascript/addcustomer-mern-redux/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","deleteCustomerReducer","getCustomerReducer","addCustomerReducer","updateCustomerReducer","alertReducer","reducer","getCustomer","addCustomer","deleteCustomer","updateCustomer","alert","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SACEC,qBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,qBAJF,QAKO,4BALP;AAMA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC9BU,EAAAA,WAAW,EAAEL,kBADiB;AAE9BM,EAAAA,WAAW,EAAEL,kBAFiB;AAG9BM,EAAAA,cAAc,EAAER,qBAHc;AAI9BS,EAAAA,cAAc,EAAEN,qBAJc;AAK9BO,EAAAA,KAAK,EAAEN;AALuB,CAAD,CAA/B;AAQA,MAAMO,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,KAAK,GAAGlB,WAAW,CACvBU,OADuB,EAEvBM,YAFuB,EAGvBZ,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport {\r\n  deleteCustomerReducer,\r\n  getCustomerReducer,\r\n  addCustomerReducer,\r\n  updateCustomerReducer,\r\n} from './reducers/customerReducer';\r\nimport { alertReducer } from './reducers/alertReducer';\r\n\r\nconst reducer = combineReducers({\r\n  getCustomer: getCustomerReducer,\r\n  addCustomer: addCustomerReducer,\r\n  deleteCustomer: deleteCustomerReducer,\r\n  updateCustomer: updateCustomerReducer,\r\n  alert: alertReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}