{"ast":null,"code":"import { ALERT_SUCCESS, ALERT_DELETE } from '../constants/alertConstant';\nimport { GET_CUSTOMER_REQUEST, GET_CUSTOMER_SUCCESS, GET_CUSTOMER_FAIL, DELETE_CUSTOMER_SUCCESS, DELETE_CUSTOMER_REQUEST, DELETE_CUSTOMER_FAIL, ADD_CUSTOMER_SUCCESS, ADD_CUSTOMER_REQUEST, ADD_CUSTOMER_FAIL, UPDATE_CUSTOMER_REQUEST, UPDATE_CUSTOMER_SUCCESS, UPDATE_CUSTOMER_FAIL } from '../constants/customerConstant';\nimport axios from 'axios';\nexport const getCustomersCtr = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_CUSTOMER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/customer');\n    dispatch({\n      type: GET_CUSTOMER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_CUSTOMER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const addCustomerCtr = newCustomer => async dispatch => {\n  try {\n    dispatch({\n      type: ADD_CUSTOMER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/customer', {\n      name: newCustomer.name,\n      email: newCustomer.email,\n      location: newCustomer.location,\n      age: newCustomer.age\n    }, config);\n    dispatch({\n      type: ADD_CUSTOMER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADD_CUSTOMER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteCustomerCtr = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_CUSTOMER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await axios.delete(`/api/customer/${id}`, config);\n    dispatch({\n      type: DELETE_CUSTOMER_SUCCESS\n    });\n    dispatch({\n      type: ALERT_SUCCESS,\n      payload: {\n        alertType: 'delete',\n        msg: 'customer deleted'\n      }\n    });\n    setTimeout(() => {\n      dispatch({\n        type: ALERT_DELETE\n      });\n    }, 3000);\n  } catch (error) {\n    dispatch({\n      type: DELETE_CUSTOMER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateCustomerCtr = customer => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_CUSTOMER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await axios.put(`/api/customer/${customer._id}`, customer, config);\n    dispatch({\n      type: UPDATE_CUSTOMER_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_CUSTOMER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/javascript/addcustomer-mern-redux/frontend/src/actions/customerAction.js"],"names":["ALERT_SUCCESS","ALERT_DELETE","GET_CUSTOMER_REQUEST","GET_CUSTOMER_SUCCESS","GET_CUSTOMER_FAIL","DELETE_CUSTOMER_SUCCESS","DELETE_CUSTOMER_REQUEST","DELETE_CUSTOMER_FAIL","ADD_CUSTOMER_SUCCESS","ADD_CUSTOMER_REQUEST","ADD_CUSTOMER_FAIL","UPDATE_CUSTOMER_REQUEST","UPDATE_CUSTOMER_SUCCESS","UPDATE_CUSTOMER_FAIL","axios","getCustomersCtr","dispatch","type","data","get","payload","error","response","message","addCustomerCtr","newCustomer","config","headers","post","name","email","location","age","deleteCustomerCtr","id","delete","alertType","msg","setTimeout","updateCustomerCtr","customer","put","_id"],"mappings":"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","sourcesContent":["import { ALERT_SUCCESS, ALERT_DELETE } from '../constants/alertConstant';\r\nimport {\r\n  GET_CUSTOMER_REQUEST,\r\n  GET_CUSTOMER_SUCCESS,\r\n  GET_CUSTOMER_FAIL,\r\n  DELETE_CUSTOMER_SUCCESS,\r\n  DELETE_CUSTOMER_REQUEST,\r\n  DELETE_CUSTOMER_FAIL,\r\n  ADD_CUSTOMER_SUCCESS,\r\n  ADD_CUSTOMER_REQUEST,\r\n  ADD_CUSTOMER_FAIL,\r\n  UPDATE_CUSTOMER_REQUEST,\r\n  UPDATE_CUSTOMER_SUCCESS,\r\n  UPDATE_CUSTOMER_FAIL,\r\n} from '../constants/customerConstant';\r\nimport axios from 'axios';\r\n\r\nexport const getCustomersCtr = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_CUSTOMER_REQUEST,\r\n    });\r\n    const { data } = await axios.get('/api/customer');\r\n\r\n    dispatch({\r\n      type: GET_CUSTOMER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_CUSTOMER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addCustomerCtr = (newCustomer) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ADD_CUSTOMER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/customer',\r\n      {\r\n        name: newCustomer.name,\r\n        email: newCustomer.email,\r\n        location: newCustomer.location,\r\n        age: newCustomer.age,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_CUSTOMER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_CUSTOMER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteCustomerCtr = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: DELETE_CUSTOMER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/customer/${id}`, config);\r\n\r\n    dispatch({\r\n      type: DELETE_CUSTOMER_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: ALERT_SUCCESS,\r\n      payload: { alertType: 'delete', msg: 'customer deleted' },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: ALERT_DELETE });\r\n    }, 3000);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_CUSTOMER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateCustomerCtr = (customer) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: UPDATE_CUSTOMER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    await axios.put(`/api/customer/${customer._id}`, customer, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_CUSTOMER_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_CUSTOMER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}