{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { deleteCustomerReducer, listCustomerReducer, addCustomerReducer } from './reducers/customerReducer';\nimport { alertReducer } from './reducers/alertReducer';\nconst reducer = combineReducers({\n  addCustomer: addCustomerReducer,\n  deleteCustomer: deleteCustomerReducer,\n  alert: alertReducer,\n  listCustomer: listCustomerReducer\n});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/javascript/addcustomer-mern-redux/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","deleteCustomerReducer","listCustomerReducer","addCustomerReducer","alertReducer","reducer","addCustomer","deleteCustomer","alert","listCustomer","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SACEC,qBADF,EAEEC,mBAFF,EAGEC,kBAHF,QAIO,4BAJP;AAKA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC9BS,EAAAA,WAAW,EAAEH,kBADiB;AAE9BI,EAAAA,cAAc,EAAEN,qBAFc;AAG9BO,EAAAA,KAAK,EAAEJ,YAHuB;AAI9BK,EAAAA,YAAY,EAAEP;AAJgB,CAAD,CAA/B;AAOA,MAAMQ,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACZ,KAAD,CAAnB;AAEA,MAAMa,KAAK,GAAGhB,WAAW,CACvBS,OADuB,EAEvBK,YAFuB,EAGvBV,mBAAmB,CAACF,eAAe,CAAC,GAAGa,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport {\r\n  deleteCustomerReducer,\r\n  listCustomerReducer,\r\n  addCustomerReducer,\r\n} from './reducers/customerReducer';\r\nimport { alertReducer } from './reducers/alertReducer';\r\n\r\nconst reducer = combineReducers({\r\n  addCustomer: addCustomerReducer,\r\n  deleteCustomer: deleteCustomerReducer,\r\n  alert: alertReducer,\r\n  listCustomer: listCustomerReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}