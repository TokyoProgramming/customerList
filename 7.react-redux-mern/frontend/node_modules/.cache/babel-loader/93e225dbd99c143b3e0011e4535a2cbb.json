{"ast":null,"code":"import { ALERT_SUCCESS, ALERT_DELETE } from '../constants/alertConstant';\nimport { CUSTOMER_ADD_SUCCESS, CUSTOMER_ADD_REQUEST, CUSTOMER_ADD_FAIL, CUSTOMER_DELETE_SUCCESS, CUSTOMER_DELETE_REQUEST, CUSTOMER_DELETE_FAIL } from '../constants/customerConstant';\nexport const addCustomerToList = data => dispatch => {\n  const {\n    email\n  } = data;\n\n  try {\n    dispatch({\n      type: CUSTOMER_ADD_REQUEST\n    });\n\n    const validateEmail = mail => {\n      var re = /\\S+@\\S+\\.\\S+/;\n      return re.test(mail);\n    };\n\n    const validate = validateEmail(email);\n\n    if (validate) {\n      dispatch({\n        type: CUSTOMER_ADD_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: CUSTOMER_ADD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteCustomerToList = id => dispatch => {\n  try {\n    dispatch({\n      type: CUSTOMER_DELETE_REQUEST\n    });\n    dispatch({\n      type: CUSTOMER_DELETE_SUCCESS,\n      payload: id\n    });\n    dispatch({\n      type: ALERT_SUCCESS,\n      payload: {\n        alertType: 'delete',\n        msg: 'customer deleted'\n      }\n    });\n    setTimeout(() => {\n      dispatch({\n        type: ALERT_DELETE\n      });\n    }, 3000);\n  } catch (error) {\n    dispatch({\n      type: CUSTOMER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/javascript/addcustomer-mern-redux/frontend/src/actions/customerAction.js"],"names":["ALERT_SUCCESS","ALERT_DELETE","CUSTOMER_ADD_SUCCESS","CUSTOMER_ADD_REQUEST","CUSTOMER_ADD_FAIL","CUSTOMER_DELETE_SUCCESS","CUSTOMER_DELETE_REQUEST","CUSTOMER_DELETE_FAIL","addCustomerToList","data","dispatch","email","type","validateEmail","mail","re","test","validate","payload","error","response","message","deleteCustomerToList","id","alertType","msg","setTimeout"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,QAA4C,4BAA5C;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,iBAHF,EAIEC,uBAJF,EAKEC,uBALF,EAMEC,oBANF,QAOO,+BAPP;AASA,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAWC,QAAD,IAAc;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAYF,IAAlB;;AACA,MAAI;AACFC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;;AAIA,UAAMU,aAAa,GAAIC,IAAD,IAAU;AAC9B,UAAIC,EAAE,GAAG,cAAT;AACA,aAAOA,EAAE,CAACC,IAAH,CAAQF,IAAR,CAAP;AACD,KAHD;;AAKA,UAAMG,QAAQ,GAAGJ,aAAa,CAACF,KAAD,CAA9B;;AACA,QAAIM,QAAJ,EAAc;AACZP,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEV,oBADC;AAEPgB,QAAAA,OAAO,EAAET;AAFF,OAAD,CAAR;AAID;AACF,GAjBD,CAiBE,OAAOU,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,iBADC;AAEPc,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeX,IAAf,CAAoBY,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeX,IAAf,CAAoBY,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA5BM;AA8BP,OAAO,MAAMC,oBAAoB,GAAIC,EAAD,IAASb,QAAD,IAAc;AACxD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAIAI,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,uBADC;AAEPa,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAKAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEZ,aADC;AAEPkB,MAAAA,OAAO,EAAE;AAAEM,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,GAAG,EAAE;AAA5B;AAFF,KAAD,CAAR;AAKAC,IAAAA,UAAU,CAAC,MAAM;AACfhB,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEX;AAAR,OAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAlBD,CAkBE,OAAOkB,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEL,oBADC;AAEPW,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeX,IAAf,CAAoBY,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeX,IAAf,CAAoBY,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA5BM","sourcesContent":["import { ALERT_SUCCESS, ALERT_DELETE } from '../constants/alertConstant';\r\nimport {\r\n  CUSTOMER_ADD_SUCCESS,\r\n  CUSTOMER_ADD_REQUEST,\r\n  CUSTOMER_ADD_FAIL,\r\n  CUSTOMER_DELETE_SUCCESS,\r\n  CUSTOMER_DELETE_REQUEST,\r\n  CUSTOMER_DELETE_FAIL,\r\n} from '../constants/customerConstant';\r\n\r\nexport const addCustomerToList = (data) => (dispatch) => {\r\n  const { email } = data;\r\n  try {\r\n    dispatch({\r\n      type: CUSTOMER_ADD_REQUEST,\r\n    });\r\n\r\n    const validateEmail = (mail) => {\r\n      var re = /\\S+@\\S+\\.\\S+/;\r\n      return re.test(mail);\r\n    };\r\n\r\n    const validate = validateEmail(email);\r\n    if (validate) {\r\n      dispatch({\r\n        type: CUSTOMER_ADD_SUCCESS,\r\n        payload: data,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CUSTOMER_ADD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteCustomerToList = (id) => (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: CUSTOMER_DELETE_REQUEST,\r\n    });\r\n\r\n    dispatch({\r\n      type: CUSTOMER_DELETE_SUCCESS,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch({\r\n      type: ALERT_SUCCESS,\r\n      payload: { alertType: 'delete', msg: 'customer deleted' },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: ALERT_DELETE });\r\n    }, 3000);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CUSTOMER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}