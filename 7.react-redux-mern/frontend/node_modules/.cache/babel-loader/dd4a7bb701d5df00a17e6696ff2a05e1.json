{"ast":null,"code":"import { GET_CUSTOMER_REQUEST, GET_CUSTOMER_SUCCESS, GET_CUSTOMER_FAIL, CUSTOMER_ADD_REQUEST, CUSTOMER_ADD_SUCCESS, CUSTOMER_ADD_FAIL, CUSTOMER_DELETE_REQUEST, CUSTOMER_DELETE_SUCCESS, CUSTOMER_DELETE_FAIL } from '../constants/customerConstant';\nexport const listCustomerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    customers: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_CUSTOMER_REQUEST:\n      return {\n        loading: true,\n        customers: []\n      };\n\n    case GET_CUSTOMER_SUCCESS:\n      return {\n        loading: false,\n        customers: payload\n      };\n\n    case GET_CUSTOMER_FAIL:\n      return {\n        loading: false,\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const customerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    customer: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CUSTOMER_DELETE_REQUEST:\n    case CUSTOMER_ADD_REQUEST:\n      return {\n        loading: true,\n        ...state\n      };\n\n    case CUSTOMER_ADD_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        customer: [...state.customer, payload]\n      };\n\n    case CUSTOMER_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        customer: state.customer.filter(x => x.id !== payload)\n      };\n\n    case CUSTOMER_DELETE_FAIL:\n    case CUSTOMER_ADD_FAIL:\n      return {\n        loading: false,\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/javascript/addcustomer-mern-redux/frontend/src/reducers/customerReducer.js"],"names":["GET_CUSTOMER_REQUEST","GET_CUSTOMER_SUCCESS","GET_CUSTOMER_FAIL","CUSTOMER_ADD_REQUEST","CUSTOMER_ADD_SUCCESS","CUSTOMER_ADD_FAIL","CUSTOMER_DELETE_REQUEST","CUSTOMER_DELETE_SUCCESS","CUSTOMER_DELETE_FAIL","listCustomerReducer","state","customers","action","type","payload","loading","error","customerReducer","customer","success","filter","x","id"],"mappings":"AAAA,SACEA,oBADF,EAEEC,oBAFF,EAGEC,iBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,uBAPF,EAQEC,uBARF,EASEC,oBATF,QAUO,+BAVP;AAYA,OAAO,MAAMC,mBAAmB,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA8B;AAAA,MAAXC,MAAW;AACxE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKb,oBAAL;AACE,aAAO;AAAEe,QAAAA,OAAO,EAAE,IAAX;AAAiBJ,QAAAA,SAAS,EAAE;AAA5B,OAAP;;AACF,SAAKV,oBAAL;AACE,aAAO;AAAEc,QAAAA,OAAO,EAAE,KAAX;AAAkBJ,QAAAA,SAAS,EAAEG;AAA7B,OAAP;;AAEF,SAAKZ,iBAAL;AACE,aAAO;AAAEa,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEF;AAAzB,OAAP;;AACF;AACE,aAAOJ,KAAP;AATJ;AAWD,CAbM;AAeP,OAAO,MAAMO,eAAe,GAAG,YAAsC;AAAA,MAArCP,KAAqC,uEAA7B;AAAEQ,IAAAA,QAAQ,EAAE;AAAZ,GAA6B;AAAA,MAAXN,MAAW;AACnE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKP,uBAAL;AACA,SAAKH,oBAAL;AACE,aAAO;AAAEY,QAAAA,OAAO,EAAE,IAAX;AAAiB,WAAGL;AAApB,OAAP;;AACF,SAAKN,oBAAL;AACE,aAAO;AACLW,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,OAAO,EAAE,IAFJ;AAGLD,QAAAA,QAAQ,EAAE,CAAC,GAAGR,KAAK,CAACQ,QAAV,EAAoBJ,OAApB;AAHL,OAAP;;AAKF,SAAKP,uBAAL;AACE,aAAO;AACLQ,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,OAAO,EAAE,IAFJ;AAGLD,QAAAA,QAAQ,EAAER,KAAK,CAACQ,QAAN,CAAeE,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASR,OAAtC;AAHL,OAAP;;AAKF,SAAKN,oBAAL;AACA,SAAKH,iBAAL;AACE,aAAO;AAAEU,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEF;AAAzB,OAAP;;AACF;AACE,aAAOJ,KAAP;AApBJ;AAsBD,CAxBM","sourcesContent":["import {\r\n  GET_CUSTOMER_REQUEST,\r\n  GET_CUSTOMER_SUCCESS,\r\n  GET_CUSTOMER_FAIL,\r\n  CUSTOMER_ADD_REQUEST,\r\n  CUSTOMER_ADD_SUCCESS,\r\n  CUSTOMER_ADD_FAIL,\r\n  CUSTOMER_DELETE_REQUEST,\r\n  CUSTOMER_DELETE_SUCCESS,\r\n  CUSTOMER_DELETE_FAIL,\r\n} from '../constants/customerConstant';\r\n\r\nexport const listCustomerReducer = (state = { customers: [] }, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_CUSTOMER_REQUEST:\r\n      return { loading: true, customers: [] };\r\n    case GET_CUSTOMER_SUCCESS:\r\n      return { loading: false, customers: payload };\r\n\r\n    case GET_CUSTOMER_FAIL:\r\n      return { loading: false, error: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const customerReducer = (state = { customer: [] }, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CUSTOMER_DELETE_REQUEST:\r\n    case CUSTOMER_ADD_REQUEST:\r\n      return { loading: true, ...state };\r\n    case CUSTOMER_ADD_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        customer: [...state.customer, payload],\r\n      };\r\n    case CUSTOMER_DELETE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        customer: state.customer.filter((x) => x.id !== payload),\r\n      };\r\n    case CUSTOMER_DELETE_FAIL:\r\n    case CUSTOMER_ADD_FAIL:\r\n      return { loading: false, error: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}